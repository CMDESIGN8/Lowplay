{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\LOW PLAY\\\\lowplay-backend\\\\src\\\\components\\\\AvatarSelection.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/AvatarSelection.css'; // Importamos el archivo de estilos\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvatarSelection = ({\n  onAvatarSelect\n}) => {\n  _s();\n  const avatars = ['1.jpeg', '2.jpeg', '3.jpeg', '4.jpeg', '5.jpeg', '6.jpeg', '7.jpeg'];\n  const [showSelector, setShowSelector] = useState(false);\n  const [selectedAvatar, setSelectedAvatar] = useState(null); // Estado para el avatar seleccionado\n\n  const handleAvatarClick = avatar => {\n    setSelectedAvatar(avatar);\n    onAvatarSelect(avatar); // Pasamos el avatar seleccionado al Dashboard\n    setShowSelector(false); // Cierra la lista de avatares\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"choose-avatar-button\",\n      onClick: () => setShowSelector(!showSelector),\n      children: \"Seleccionar Avatar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), showSelector && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"avatar-selector\",\n      children: avatars.map((avatar, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: require(`../assets/avatars/${avatar}`) // Usamos require para cargar las imágenes\n        ,\n        alt: `Avatar ${index + 1}`,\n        className: \"avatar-option\",\n        onClick: () => handleAvatarClick(avatar) // Al hacer clic, seleccionamos el avatar\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(AvatarSelection, \"nKtvvaYtxxYeKNBOpKIrB73FI9I=\");\n_c = AvatarSelection;\nexport default AvatarSelection;\nvar _c;\n$RefreshReg$(_c, \"AvatarSelection\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AvatarSelection","onAvatarSelect","_s","avatars","showSelector","setShowSelector","selectedAvatar","setSelectedAvatar","handleAvatarClick","avatar","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","index","src","require","alt","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Desktop/LOW PLAY/lowplay-backend/src/components/AvatarSelection.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/AvatarSelection.css'; // Importamos el archivo de estilos\r\n\r\nconst AvatarSelection = ({ onAvatarSelect }) => {\r\n  const avatars = [\r\n    '1.jpeg',\r\n    '2.jpeg',\r\n    '3.jpeg',\r\n    '4.jpeg',\r\n    '5.jpeg',\r\n    '6.jpeg',\r\n    '7.jpeg',\r\n  ];\r\n\r\n  const [showSelector, setShowSelector] = useState(false);\r\n  const [selectedAvatar, setSelectedAvatar] = useState(null); // Estado para el avatar seleccionado\r\n\r\n  const handleAvatarClick = (avatar) => {\r\n    setSelectedAvatar(avatar);\r\n    onAvatarSelect(avatar); // Pasamos el avatar seleccionado al Dashboard\r\n    setShowSelector(false); // Cierra la lista de avatares\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        className=\"choose-avatar-button\"\r\n        onClick={() => setShowSelector(!showSelector)}\r\n      >\r\n        Seleccionar Avatar\r\n      </button>\r\n\r\n      {showSelector && (\r\n        <div className=\"avatar-selector\">\r\n          {avatars.map((avatar, index) => (\r\n            <img\r\n              key={index}\r\n              src={require(`../assets/avatars/${avatar}`)} // Usamos require para cargar las imágenes\r\n              alt={`Avatar ${index + 1}`}\r\n              className=\"avatar-option\"\r\n              onClick={() => handleAvatarClick(avatar)} // Al hacer clic, seleccionamos el avatar\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AvatarSelection;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,+BAA+B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAMC,OAAO,GAAG,CACd,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,CACT;EAED,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE5D,MAAMW,iBAAiB,GAAIC,MAAM,IAAK;IACpCF,iBAAiB,CAACE,MAAM,CAAC;IACzBR,cAAc,CAACQ,MAAM,CAAC,CAAC,CAAC;IACxBJ,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;EAC1B,CAAC;EAED,oBACEN,OAAA;IAAAW,QAAA,gBACEX,OAAA;MACEY,SAAS,EAAC,sBAAsB;MAChCC,OAAO,EAAEA,CAAA,KAAMP,eAAe,CAAC,CAACD,YAAY,CAAE;MAAAM,QAAA,EAC/C;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAERZ,YAAY,iBACXL,OAAA;MAAKY,SAAS,EAAC,iBAAiB;MAAAD,QAAA,EAC7BP,OAAO,CAACc,GAAG,CAAC,CAACR,MAAM,EAAES,KAAK,kBACzBnB,OAAA;QAEEoB,GAAG,EAAEC,OAAO,CAAC,qBAAqBX,MAAM,EAAE,CAAE,CAAC;QAAA;QAC7CY,GAAG,EAAE,UAAUH,KAAK,GAAG,CAAC,EAAG;QAC3BP,SAAS,EAAC,eAAe;QACzBC,OAAO,EAAEA,CAAA,KAAMJ,iBAAiB,CAACC,MAAM,CAAE,CAAC;MAAA,GAJrCS,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKX,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACd,EAAA,CA5CIF,eAAe;AAAAsB,EAAA,GAAftB,eAAe;AA8CrB,eAAeA,eAAe;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}